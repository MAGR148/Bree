<div class="fixed inset-0 overflow-hidden" aria-labelledby="slide-over-title" role="dialog" aria-modal="true">
    <div class="absolute inset-0 overflow-hidden">
      <!--
        Background overlay, show/hide based on slide-over state.
  
        Entering: "ease-in-out duration-500"
          From: "opacity-0"
          To: "opacity-100"
        Leaving: "ease-in-out duration-500"
          From: "opacity-100"
          To: "opacity-0"
      -->
      <div class="absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
      <div class="fixed inset-y-0 right-0 pl-10 max-w-full flex">
        <!--
          Slide-over panel, show/hide based on slide-over state.
  
          Entering: "transform transition ease-in-out duration-500 sm:duration-700"
            From: "translate-x-full"
            To: "translate-x-0"
          Leaving: "transform transition ease-in-out duration-500 sm:duration-700"
            From: "translate-x-0"
            To: "translate-x-full"
        -->
        <div class="relative w-screen max-w-3xl">
          <!--
            Close button, show/hide based on slide-over state.
  
            Entering: "ease-in-out duration-500"
              From: "opacity-0"
              To: "opacity-100"
            Leaving: "ease-in-out duration-500"
              From: "opacity-100"
              To: "opacity-0"
          -->
          <div class="absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4">
            <button type="button" class="rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white">
              <span class="sr-only">Close panel</span>
              <!-- Heroicon name: outline/x -->
              <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
  
          <div class="h-full flex flex-col bg-white shadow-xl overflow-y-scroll">
            <div class="px-4 sm:px-6 mt-4">
                <h2 class="text-xl font-semibold text-gray-900" id="slide-over-title">
                    Expediente
                </h2>
                <div class="mt-5">
                    <div class="sm:hidden">
                    <label for="tabs" class="sr-only">Select a tab</label>
                    <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
                    <select id="tabs" name="tabs" class="block w-full focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md">
                        <option>Generales</option>
                
                        <option selected>Historial</option>

												<option>Antropométrico</option>
                
                        <option>Hábitos</option>
                
                        <option>Actividad física</option>

                        <option>Notas</option>
                    </select>
                    </div>
                    <div class="hidden sm:block">
                    <nav class="flex space-x-4" aria-label="Tabs">
                        <!-- Current: "bg-indigo-100 text-indigo-700", Default: "text-gray-500 hover:text-gray-700" -->
                        <a href="general" class="text-gray-500  hover:text-gray-700 px-3 py-2 font-medium text-sm rounded-md">
                        Generales
                        </a>

                        <a href="history" class= "bg-indigo-100 text-indigo-700 px-3 py-2 font-medium text-sm rounded-md" aria-current="page">
                        Historial
                        </a>

												<a href="anthropometric" class=" text-gray-500 hover:text-gray-700 px-3 py-2 font-medium text-sm rounded-md">
                        Antropométrico
                        </a>
                
                        <a href="habits" class="text-gray-500 hover:text-gray-700 px-3 py-2 font-medium text-sm rounded-md">
                        Hábitos
                        </a>

                        <a href="physical_activity" class="text-gray-500 hover:text-gray-700 px-3 py-2 font-medium text-sm rounded-md">
                        Actividad física
                        </a>
                
                        <a href="notes" class="text-gray-500 hover:text-gray-700 px-3 py-2 font-medium text-sm rounded-md">
                        Notas
                        </a>
                    </nav>
                    </div>
                </div>
  
            </div>
						
             <div class="mt-2 relative flex-1 overflow-y-auto">
              <!-- Replace with your content --> 
            <div class="bg-gray-100 w-full px-6 py-5">
                <div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
                    <div class="md:grid md:grid-cols-3 md:gap-6">
                        <div class="md:col-span-3">
                            <h3>Antecedentes personales patológicos </h3>
                            <div class="border-t border-gray-200 px-0 sm:my-4 sm:mx-0"></div>
                        
                            <div class="mt-3 md:mt-3 md:col-span-3">
                                <fieldset>
                                    <legend class="text-base font-medium text-gray-900"></legend>
																		<div class="ml-3 text-md">
																			<h4 >Enfermedades</h4>
																			</div>
																			<div class="grid grid-cols-2 mt-4">
																				<div class="mt-4">
																					<label  class="medium">
																						<input type="checkbox" id="ninguna" name="ninguna" class="checkbox"/>
																						Ninguna
																					</label>
																				</div>
																				<div class="mt-4">
																					<label  class="medium">
																						<input type="checkbox" id="diabetes1" name="diabetes1" class="checkbox"/>
																						Diabetes tipo I
																					</label>
																				</div>
																				<div class="mt-4">
																					<label  class="medium">
																						<input type="checkbox" id="diabetes2" name="diabetes2" class="checkbox"/>
																						Diabetes tipo II
																					</label>
																				</div>
																				<div class="mt-4">
																					<label  class="medium">
																						<input type="checkbox" id="gestational" name="gestational" class="checkbox"/>
																						Diabetes gestacional 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label  class="medium">
																						<input type="checkbox" id="hypertension" name="hypertension" class="checkbox"/>
																						Hipertensión arterial 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="cholesterol" name="cholesterol" class="checkbox"/>
																						Colesterol elevado
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="triglycerides" name="triglycerides" class="checkbox"/>
																						Trigliceridos elevados
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="cardiovascular" name="cardiovascular" class="checkbox"/>
																						Enfermedad cardiovascular 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="overweight" name="overweight" class="checkbox"/>
																						Sobrepeso
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="obesity" name="obesity" class="checkbox"/>
																						Obesidad 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="cancer" name="cancer" class="checkbox"/>
																						Cáncer
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="hypotheroidism" name="hypotheroidism" class="checkbox"/>
																						Hipotiroidismo
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="syndrome" name="syndrome" class="checkbox"/>
																						Síndrome de Ovario Poliquistico 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="anemia" name="anemia" class="checkbox"/>
																						Anemia
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="depression" name="depression" class="checkbox"/>
																						Depresión 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="anxiety" name="anxiety" class="checkbox"/>
																						Ansiedad 
																					</label>
																				</div>
																				<div class="mt-4">
																					<label class="medium">
																						<input type="checkbox" id="disroders" name="disroders" class="checkbox"/>
																						Trastornos psicológicos 
																					</label>
																				</div>
																			</div>
																			
                                     
                                   
                                </fieldset>
                                <div class="col-span-6 sm:col-span-4 mt-8">

																	<div class="mt-3 md:mt-3 md:col-span-3">
                                    <label for="other_sick" class="text-sm">Otra enfermedad</label> 
                                    <input type="text" name="motive" id="motive" autocomplete="motive" class="dropdown sm:text-md">
                                </div>
																<div class="col-span-6 sm:col-span-4 mt-8">
																<div class="mt-3 md:mt-3 md:col-span-3">
                                    <label for="medication" class="text-sm">Medicamento</label> 
                                
																	<input type="text" name="medication" id="medication" autocomplete="medication" class="dropdown sm:text-md">
																	</div>
																	<div class="grid grid-cols-6 gap-6">
																		</div>
																<!--Select-->
																	
																<div class="col-span-6 sm:col-span-6 mt-8">
																	<div>
																	<label id="listbox-label" class="text-sm">
																			Cirugía
																	</label>
																	<div class="max-w-xs mt-1">
																			<div
																							x-data="select({ data: { s: 'Si', n: 'No'}, emptyOptionsMessage: 'No se ha seleccionado una opción.', name: 'cirugia', placeholder: 'Elige una opción' })"
																							x-init="init()"
																							@click.away="closeListbox()"
																							@keydown.escape="closeListbox()"
																							class="relative"
																			>
																							<span class="inline-block w-full rounded-md shadow-sm">
																										<button type="button"
																														x-ref="button"
																														@click="toggleListboxVisibility()"
																														:aria-expanded="open"
																														aria-haspopup="listbox"
																														class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
																										>
																													<span
																																	x-show="! open"
																																	x-text="value in options ? options[value] : placeholder"
																																	:class="{ 'text-gray-500': ! (value in options) }"
																																	class="block truncate"
																													></span>
															
																													<input
																																	x-ref="search"
																																	x-show="open"
																																	x-model="search"
																																	@keydown.enter.stop.prevent="selectOption()"
																																	@keydown.arrow-up.prevent="focusPreviousOption()"
																																	@keydown.arrow-down.prevent="focusNextOption()"
																																	type="search"
																																	class="w-full h-full form-control focus:outline-none"
																													/>
															
																													<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
																															<svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" stroke="currentColor">
																																	<path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5" stroke-linecap="round"
																																				stroke-linejoin="round"></path>
																															</svg>
																													</span>
																										</button>
																							</span>
															
																					<div
																									x-show="open"
																									x-transition:leave="transition ease-in duration-100"
																									x-transition:leave-start="opacity-100"
																									x-transition:leave-end="opacity-0"
																									x-cloak
																									class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
																					>
																							<ul
																											x-ref="listbox"
																											@keydown.enter.stop.prevent="selectOption()"
																											@keydown.arrow-up.prevent="focusPreviousOption()"
																											@keydown.arrow-down.prevent="focusNextOption()"
																											role="listbox"
																											:aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
																											tabindex="-1"
																											class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
																							>
																									<template x-for="(key, index) in Object.keys(options)" :key="index">
																											<li
																															:id="name + 'Option' + focusedOptionIndex"
																															@click="selectOption()"
																															@mouseenter="focusedOptionIndex = index"
																															@mouseleave="focusedOptionIndex = null"
																															role="option"
																															:aria-selected="focusedOptionIndex === index"
																															:class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
																															class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
																											>
																															<span x-text="Object.values(options)[index]"
																																		:class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
																																		class="block font-normal truncate"
																															></span>
															
																													<span
																																	x-show="key === value"
																																	:class="{ 'text-white': index === focusedOptionIndex, 'text-indigo-600': index !== focusedOptionIndex }"
																																	class="absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600"
																													>
																																	<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
																																			<path fill-rule="evenodd"
																																						d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
																																						clip-rule="evenodd"/>
																																	</svg>
																															</span>
																											</li>
																									</template>
															
																									<div
																													x-show="! Object.keys(options).length"
																													x-text="emptyOptionsMessage"
																													class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
																							</ul>
																					</div>
																			</div>
															
																			<script>
																					function select(config) {
																							return {
																									data: config.data,
															
																									emptyOptionsMessage: config.emptyOptionsMessage ?? 'No results match your search.',
															
																									focusedOptionIndex: null,
															
																									name: config.name,
															
																									open: false,
															
																									options: {},
															
																									placeholder: config.placeholder ?? 'Select an option',
															
																									search: '',
															
																									value: config.value,
															
																									closeListbox: function () {
																											this.open = false
															
																											this.focusedOptionIndex = null
															
																											this.search = ''
																									},
															
																									focusNextOption: function () {
																											if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1
															
																											if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return
															
																											this.focusedOptionIndex++
															
																											this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																													block: "center",
																											})
																									},
															
																									focusPreviousOption: function () {
																											if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
															
																											if (this.focusedOptionIndex <= 0) return
															
																											this.focusedOptionIndex--
															
																											this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																													block: "center",
																											})
																									},
															
																									init: function () {
																											this.options = this.data
															
																											if (!(this.value in this.options)) this.value = null
															
																											this.$watch('search', ((value) => {
																													if (!this.open || !value) return this.options = this.data
															
																													this.options = Object.keys(this.data)
																															.filter((key) => this.data[key].toLowerCase().includes(value.toLowerCase()))
																															.reduce((options, key) => {
																																	options[key] = this.data[key]
																																	return options
																															}, {})
																											}))
																									},
															
																									selectOption: function () {
																											if (!this.open) return this.toggleListboxVisibility()
															
																											this.value = Object.keys(this.options)[this.focusedOptionIndex]
															
																											this.closeListbox()
																									},
															
																									toggleListboxVisibility: function () {
																											if (this.open) return this.closeListbox()
															
																											this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
															
																											if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
															
																											this.open = true
															
																											this.$nextTick(() => {
																													this.$refs.search.focus()
															
																													this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																															block: "center"
																													})
																											})
																									},
																							}
																					}
																			</script>
																	</div>
															</div>
																<!--Fin select-->
																<div class="ml-3 text-md mt-8">
																	<h4>Trastornos gastrointestinales</h4>
																	</div>
																	<div class="grid grid-cols-3 mt-4">
																	
																			<div class="mt-4">
																				<label  class="medium">
																					<input type="checkbox" id="nausea" name="nausea" class="input-checkbox"/>
																					Nauseas
																				</label>
																			</div>
																			<div class="mt-4">
																				<label  class="medium">
																					<input type="checkbox" id="vomito" name="vomito" class="input-checkbox"/>
																					Vómitos
																				</label>
																			</div>
																			<div class="mt-4">
																				<label  class="medium">
																					<input type="checkbox" id="diarrhea" name="diarrhea" class="input-checkbox"/>
																					Diarrea
																				</label>
																			</div>
																			<div class="mt-4">
																				<label  class="medium">
																					<input type="checkbox" id="estrenimiento" name="estrenimiento" class="input-checkbox"/>
																					Estreñimiento  
																				</label>
																			</div>
																			<div class="mt-4">
																				<label  class="medium">
																					<input type="checkbox" id="inflammation" name="inflammation" class="input-checkbox"/>
																					Inflamación abdominal  
																				</label>
																			</div>
																			<div class="mt-4">
																				<label class="medium">
																					<input type="checkbox" id="colitis" name="colitis" class="input-checkbox"/>
																					Colitis 
																				</label>
																			</div>
																			<div class="mt-4">
																				<label class="medium">
																					<input type="checkbox" id="gastritis" name="gastritis" class="input-checkbox"/>
																					Gastritis 
																				</label>
																			</div>
																			<div class="mt-4">
																				<label class="medium">
																					<input type="checkbox" id="reflux" name="reflux" class="input-checkbox"/>
																					Reflujo 
																				</label>
																			</div>
																		</div>
																	
																	
																 
															 
														</fieldset>
														<div class="col-span-6 sm:col-span-4 mt-8">
																<label for="motive" class="text-sm">Otro trastorno gastrointestinal</label>
																<input type="text" name="motive" id="motive" autocomplete="motive" class="dropdown sm:text-md">
														</div>
												
                    </div>
                </div> <!-- fin card Motivo de consulta-->
								
            </div>
							
              <!-- /End replace -->
            </div>
						
          </div>
					
        </div>
				
      </div>
			</div>

			<!-- Exploración físico --> 
			<div class="bg-gray-100 w-full px-6 py-5">
				<div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
						<div class="md:grid md:grid-cols-3 md:gap-6">
								<div class="md:col-span-3">
										<h3 class="text-lg font-medium leading-6 text-gray-900">Exploración física / Signos y síntomas </h3>
										<div class="border-t border-gray-200 px-0 sm:my-4 sm:mx-0"></div>
								
										<div class="mt-5 md:mt-5 md:col-span-3">
												<form action="#" method="POST">
														<div class="grid grid-cols-6 gap-6">
																<div class="col-span-6 sm:col-span-3">
																<label for="hair" class="text-sm">Cabello</label>
																<input type="text" name="hair" id="hair" autocomplete="hair" class="mt-1 p-2 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-md border border-gray-300 rounded-md">
																</div>
										
																<div class="col-span-6 sm:col-span-3">
																<label for="skin" class="text-sm">Piel</label>
																<input type="text" name="skin" id="skin" autocomplete="skin" class="dropdown sm:text-md">
																</div>

																<div class="col-span-6 sm:col-span-3">
																<label for="eyes" class="text-sm">Ojos</label>
																<input type="text" name="eyes" id="eyes" autocomplete="eyes" class="mt-1 p-2 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-md border border-gray-300 rounded-md">
																</div>
											
																<div class="col-span-6 sm:col-span-3">
																<label for="nails" class="text-sm">Uñas</label>
																<input type="text" name="nails" id="nails" autocomplete="nails" class="dropdown sm:text-md">
																</div>

																<div class="col-span-6 sm:col-span-3">
																<label for="mouth" class="text-sm">Boca</label>
																<input type="text" name="mouth" id="mouth" autocomplete="mouth" class="mt-1 p-2 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-md border border-gray-300 rounded-md">
																</div>
											
																<div class="col-span-6 sm:col-span-3">
																<label for="blood-pressure" class="text-sm">Presión arterial (mm Hg)</label>
																<input type="text" name="blood-pressure" id="blood-pressure" autocomplete="blood-pressure" class="dropdown sm:text-md">
																</div>
										
																
														</div>
												</form>
										</div>
								</div>
						</div>
				</div> <!-- fin card exploración-->


				
    </div>
			
			<!-- Replace with your content --> 
			<div class="bg-gray-100 w-full px-6 py-5">
				<div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
						<div class="md:grid md:grid-cols-3 md:gap-6">
								<div class="md:col-span-3">
										<h3 class="text-lg font-medium leading-6 text-gray-900">Toxicomanias </h3>
										<div class="border-t border-gray-200 px-0 sm:my-4 sm:mx-0"></div>
								
										<div class="mt-5 md:mt-5 md:col-span-3">
												<form action="#" method="POST">
														<div class="grid grid-cols-6 gap-6">
															<div class="col-span-6 sm:col-span-3">
																<div>
																<label id="listbox-label-alcohol" class="text-sm">
																		Alcohol
																</label>
																<div class="max-w-xs mt-1">
																		<div
																		x-data="select({ data: { n: 'Nunca', n1: '1-2 días de la semana', n2: '3-5 días de la semana', d:'Diariamente'}, emptyOptionsMessage: 'No se ha seleccionado ninguna opción.', name: 'alcohol', placeholder: 'Elige una opción' })"
																						x-init="init()"
																						@click.away="closeListbox()"
																						@keydown.escape="closeListbox()"
																						class="relative"
																		>
																						<span class="inline-block w-full rounded-md shadow-sm">
																									<button type="button"
																													x-ref="button"
																													@click="toggleListboxVisibility()"
																													:aria-expanded="open"
																													aria-haspopup="listbox"
																													class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
																									>
																												<span
																																x-show="! open"
																																x-text="value in options ? options[value] : placeholder"
																																:class="{ 'text-gray-500': ! (value in options) }"
																																class="block truncate"
																												></span>
														
																												<input
																																x-ref="search"
																																x-show="open"
																																x-model="search"
																																@keydown.enter.stop.prevent="selectOption()"
																																@keydown.arrow-up.prevent="focusPreviousOption()"
																																@keydown.arrow-down.prevent="focusNextOption()"
																																type="search"
																																class="w-full h-full form-control focus:outline-none"
																												/>
														
																												<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
																														<svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" stroke="currentColor">
																																<path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5" stroke-linecap="round"
																																			stroke-linejoin="round"></path>
																														</svg>
																												</span>
																									</button>
																						</span>
														
																				<div
																								x-show="open"
																								x-transition:leave="transition ease-in duration-100"
																								x-transition:leave-start="opacity-100"
																								x-transition:leave-end="opacity-0"
																								x-cloak
																								class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
																				>
																						<ul
																										x-ref="listbox"
																										@keydown.enter.stop.prevent="selectOption()"
																										@keydown.arrow-up.prevent="focusPreviousOption()"
																										@keydown.arrow-down.prevent="focusNextOption()"
																										role="listbox"
																										:aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
																										tabindex="-1"
																										class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
																						>
																								<template x-for="(key, index) in Object.keys(options)" :key="index">
																										<li
																														:id="name + 'Option' + focusedOptionIndex"
																														@click="selectOption()"
																														@mouseenter="focusedOptionIndex = index"
																														@mouseleave="focusedOptionIndex = null"
																														role="option"
																														:aria-selected="focusedOptionIndex === index"
																														:class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
																														class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
																										>
																														<span x-text="Object.values(options)[index]"
																																	:class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
																																	class="block font-normal truncate"
																														></span>
														
																												<span
																																x-show="key === value"
																																:class="{ 'text-white': index === focusedOptionIndex, 'text-indigo-600': index !== focusedOptionIndex }"
																																class="absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600"
																												>
																																<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
																																		<path fill-rule="evenodd"
																																					d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
																																					clip-rule="evenodd"/>
																																</svg>
																														</span>
																										</li>
																								</template>
														
																								<div
																												x-show="! Object.keys(options).length"
																												x-text="emptyOptionsMessage"
																												class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
																						</ul>
																				</div>
																		</div>
														
																		<script>
																				function select(config) {
																						return {
																								data: config.data,
														
																								emptyOptionsMessage: config.emptyOptionsMessage ?? 'No results match your search.',
														
																								focusedOptionIndex: null,
														
																								name: config.name,
														
																								open: false,
														
																								options: {},
														
																								placeholder: config.placeholder ?? 'Select an option',
														
																								search: '',
														
																								value: config.value,
														
																								closeListbox: function () {
																										this.open = false
														
																										this.focusedOptionIndex = null
														
																										this.search = ''
																								},
														
																								focusNextOption: function () {
																										if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1
														
																										if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return
														
																										this.focusedOptionIndex++
														
																										this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																												block: "center",
																										})
																								},
														
																								focusPreviousOption: function () {
																										if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
														
																										if (this.focusedOptionIndex <= 0) return
														
																										this.focusedOptionIndex--
														
																										this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																												block: "center",
																										})
																								},
														
																								init: function () {
																										this.options = this.data
														
																										if (!(this.value in this.options)) this.value = null
														
																										this.$watch('search', ((value) => {
																												if (!this.open || !value) return this.options = this.data
														
																												this.options = Object.keys(this.data)
																														.filter((key) => this.data[key].toLowerCase().includes(value.toLowerCase()))
																														.reduce((options, key) => {
																																options[key] = this.data[key]
																																return options
																														}, {})
																										}))
																								},
														
																								selectOption: function () {
																										if (!this.open) return this.toggleListboxVisibility()
														
																										this.value = Object.keys(this.options)[this.focusedOptionIndex]
														
																										this.closeListbox()
																								},
														
																								toggleListboxVisibility: function () {
																										if (this.open) return this.closeListbox()
														
																										this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
														
																										if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
														
																										this.open = true
														
																										this.$nextTick(() => {
																												this.$refs.search.focus()
														
																												this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																														block: "center"
																												})
																										})
																								},
																						}
																				}
																		</script>
																</div>
														</div>
														<br>
														<div class="col-span-6 sm:col-span-3">
															<div>
															<label id="listbox-label-tobacco" class="text-sm">
																	Tabaco
															</label>
															<div class="max-w-xs mt-1">
																	<div
																					x-data="select({ data: { n: 'Nunca', n1: '1-2 días de la semana', n2: '3-5 días de la semana', d:'Diariamente'}, emptyOptionsMessage: 'No se ha seleccionado ninguna opción.', name: 'Tabaco', placeholder: 'Elige una opción' })"
																					x-init="init()"
																					@click.away="closeListbox()"
																					@keydown.escape="closeListbox()"
																					class="relative"
																	>
																					<span class="inline-block w-full rounded-md shadow-sm">
																								<button type="button"
																												x-ref="button"
																												@click="toggleListboxVisibility()"
																												:aria-expanded="open"
																												aria-haspopup="listbox"
																												class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
																								>
																											<span
																															x-show="! open"
																															x-text="value in options ? options[value] : placeholder"
																															:class="{ 'text-gray-500': ! (value in options) }"
																															class="block truncate"
																											></span>
													
																											<input
																															x-ref="search"
																															x-show="open"
																															x-model="search"
																															@keydown.enter.stop.prevent="selectOption()"
																															@keydown.arrow-up.prevent="focusPreviousOption()"
																															@keydown.arrow-down.prevent="focusNextOption()"
																															type="search"
																															class="w-full h-full form-control focus:outline-none"
																											/>
													
																											<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
																													<svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" stroke="currentColor">
																															<path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5" stroke-linecap="round"
																																		stroke-linejoin="round"></path>
																													</svg>
																											</span>
																								</button>
																					</span>
													
																			<div
																							x-show="open"
																							x-transition:leave="transition ease-in duration-100"
																							x-transition:leave-start="opacity-100"
																							x-transition:leave-end="opacity-0"
																							x-cloak
																							class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
																			>
																					<ul
																									x-ref="listbox"
																									@keydown.enter.stop.prevent="selectOption()"
																									@keydown.arrow-up.prevent="focusPreviousOption()"
																									@keydown.arrow-down.prevent="focusNextOption()"
																									role="listbox"
																									:aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
																									tabindex="-1"
																									class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
																					>
																							<template x-for="(key, index) in Object.keys(options)" :key="index">
																									<li
																													:id="name + 'Option' + focusedOptionIndex"
																													@click="selectOption()"
																													@mouseenter="focusedOptionIndex = index"
																													@mouseleave="focusedOptionIndex = null"
																													role="option"
																													:aria-selected="focusedOptionIndex === index"
																													:class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
																													class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
																									>
																													<span x-text="Object.values(options)[index]"
																																:class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
																																class="block font-normal truncate"
																													></span>
													
																											<span
																															x-show="key === value"
																															:class="{ 'text-white': index === focusedOptionIndex, 'text-indigo-600': index !== focusedOptionIndex }"
																															class="absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600"
																											>
																															<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
																																	<path fill-rule="evenodd"
																																				d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
																																				clip-rule="evenodd"/>
																															</svg>
																													</span>
																									</li>
																							</template>
													
																							<div
																											x-show="! Object.keys(options).length"
																											x-text="emptyOptionsMessage"
																											class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
																					</ul>
																			</div>
																	</div>
													
																	<script>
																			function select(config) {
																					return {
																							data: config.data,
													
																							emptyOptionsMessage: config.emptyOptionsMessage ?? 'No results match your search.',
													
																							focusedOptionIndex: null,
													
																							name: config.name,
													
																							open: false,
													
																							options: {},
													
																							placeholder: config.placeholder ?? 'Select an option',
													
																							search: '',
													
																							value: config.value,
													
																							closeListbox: function () {
																									this.open = false
													
																									this.focusedOptionIndex = null
													
																									this.search = ''
																							},
													
																							focusNextOption: function () {
																									if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1
													
																									if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return
													
																									this.focusedOptionIndex++
													
																									this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																											block: "center",
																									})
																							},
													
																							focusPreviousOption: function () {
																									if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
													
																									if (this.focusedOptionIndex <= 0) return
													
																									this.focusedOptionIndex--
													
																									this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																											block: "center",
																									})
																							},
													
																							init: function () {
																									this.options = this.data
													
																									if (!(this.value in this.options)) this.value = null
													
																									this.$watch('search', ((value) => {
																											if (!this.open || !value) return this.options = this.data
													
																											this.options = Object.keys(this.data)
																													.filter((key) => this.data[key].toLowerCase().includes(value.toLowerCase()))
																													.reduce((options, key) => {
																															options[key] = this.data[key]
																															return options
																													}, {})
																									}))
																							},
													
																							selectOption: function () {
																									if (!this.open) return this.toggleListboxVisibility()
													
																									this.value = Object.keys(this.options)[this.focusedOptionIndex]
													
																									this.closeListbox()
																							},
													
																							toggleListboxVisibility: function () {
																									if (this.open) return this.closeListbox()
													
																									this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
													
																									if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
													
																									this.open = true
													
																									this.$nextTick(() => {
																											this.$refs.search.focus()
													
																											this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																													block: "center"
																											})
																									})
																							},
																					}
																			}
																	</script>
															</div>
													</div>
										
																
														</div>
												</form>
										</div>
								</div>
						</div>
				</div> <!-- fin card información personal-->

				

  </div>
  
						</div>
						

					</div>

					<div class="bg-gray-100 w-full px-6 py-5">
						<div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
								<div class="md:grid md:grid-cols-3 md:gap-6">
										<div class="md:col-span-3">
												<h3 class="text-lg font-medium leading-6 text-gray-900">Datos gineco - obstétricos 	</h3>
												<div class="border-t border-gray-200 px-0 sm:my-4 sm:mx-0"></div>
										
												<div class="mt-5 md:mt-5 md:col-span-3">
														<form action="#" method="POST">
																<div class="grid grid-cols-6 gap-6">
																		
																		<div class="col-span-6 sm:col-span-2">
																		<label for="last-period" class="text-sm">Última menstruación </label>
																		<input type="date" placeholder="DD/MM/YY" name="me" id="last-period" autocomplete="last-period" class="mt-1 p-2 h-11 border focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-md border-gray-300 rounded-md">
																		</div>

																		</div>
																		<br>
																		<div class="col-span-6 sm:col-span-3">
																				<div>
																				<label id="listbox-label" class="text-sm">
																						Anticonceptivos
																				</label>
																				<div class="max-w-xs mt-1">
																						<div
																										x-data="select({ data: { pil: 'Píldora', dh: 'DIU hormonal', dc: 'DIU cobre', in:'Inyecciones', par:'Parches', im:'Implante', ot:'Otro'}, emptyOptionsMessage: 'No se ha seleccionado ninguna opción.', name: 'Anticonceptivo', placeholder: 'Elige una opción' })"
																										x-init="init()"
																										@click.away="closeListbox()"
																										@keydown.escape="closeListbox()"
																										class="relative"
																						>
																										<span class="inline-block w-full rounded-md shadow-sm">
																													<button type="button"
																																	x-ref="button"
																																	@click="toggleListboxVisibility()"
																																	:aria-expanded="open"
																																	aria-haspopup="listbox"
																																	class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
																													>
																																<span
																																				x-show="! open"
																																				x-text="value in options ? options[value] : placeholder"
																																				:class="{ 'text-gray-500': ! (value in options) }"
																																				class="block truncate"
																																></span>
																		
																																<input
																																				x-ref="search"
																																				x-show="open"
																																				x-model="search"
																																				@keydown.enter.stop.prevent="selectOption()"
																																				@keydown.arrow-up.prevent="focusPreviousOption()"
																																				@keydown.arrow-down.prevent="focusNextOption()"
																																				type="search"
																																				class="w-full h-full form-control focus:outline-none"
																																/>
																		
																																<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
																																		<svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" stroke="currentColor">
																																				<path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5" stroke-linecap="round"
																																							stroke-linejoin="round"></path>
																																		</svg>
																																</span>
																													</button>
																										</span>
																		
																								<div
																												x-show="open"
																												x-transition:leave="transition ease-in duration-100"
																												x-transition:leave-start="opacity-100"
																												x-transition:leave-end="opacity-0"
																												x-cloak
																												class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
																								>
																										<ul
																														x-ref="listbox"
																														@keydown.enter.stop.prevent="selectOption()"
																														@keydown.arrow-up.prevent="focusPreviousOption()"
																														@keydown.arrow-down.prevent="focusNextOption()"
																														role="listbox"
																														:aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
																														tabindex="-1"
																														class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
																										>
																												<template x-for="(key, index) in Object.keys(options)" :key="index">
																														<li
																																		:id="name + 'Option' + focusedOptionIndex"
																																		@click="selectOption()"
																																		@mouseenter="focusedOptionIndex = index"
																																		@mouseleave="focusedOptionIndex = null"
																																		role="option"
																																		:aria-selected="focusedOptionIndex === index"
																																		:class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
																																		class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
																														>
																																		<span x-text="Object.values(options)[index]"
																																					:class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
																																					class="block font-normal truncate"
																																		></span>
																		
																																<span
																																				x-show="key === value"
																																				:class="{ 'text-white': index === focusedOptionIndex, 'text-indigo-600': index !== focusedOptionIndex }"
																																				class="absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600"
																																>
																																				<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
																																						<path fill-rule="evenodd"
																																									d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
																																									clip-rule="evenodd"/>
																																				</svg>
																																		</span>
																														</li>
																												</template>
																		
																												<div
																																x-show="! Object.keys(options).length"
																																x-text="emptyOptionsMessage"
																																class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
																										</ul>
																								</div>
																						</div>
																		
																						<script>
																								function select(config) {
																										return {
																												data: config.data,
																		
																												emptyOptionsMessage: config.emptyOptionsMessage ?? 'No results match your search.',
																		
																												focusedOptionIndex: null,
																		
																												name: config.name,
																		
																												open: false,
																		
																												options: {},
																		
																												placeholder: config.placeholder ?? 'Select an option',
																		
																												search: '',
																		
																												value: config.value,
																		
																												closeListbox: function () {
																														this.open = false
																		
																														this.focusedOptionIndex = null
																		
																														this.search = ''
																												},
																		
																												focusNextOption: function () {
																														if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1
																		
																														if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return
																		
																														this.focusedOptionIndex++
																		
																														this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																																block: "center",
																														})
																												},
																		
																												focusPreviousOption: function () {
																														if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
																		
																														if (this.focusedOptionIndex <= 0) return
																		
																														this.focusedOptionIndex--
																		
																														this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																																block: "center",
																														})
																												},
																		
																												init: function () {
																														this.options = this.data
																		
																														if (!(this.value in this.options)) this.value = null
																		
																														this.$watch('search', ((value) => {
																																if (!this.open || !value) return this.options = this.data
																		
																																this.options = Object.keys(this.data)
																																		.filter((key) => this.data[key].toLowerCase().includes(value.toLowerCase()))
																																		.reduce((options, key) => {
																																				options[key] = this.data[key]
																																				return options
																																		}, {})
																														}))
																												},
																		
																												selectOption: function () {
																														if (!this.open) return this.toggleListboxVisibility()
																		
																														this.value = Object.keys(this.options)[this.focusedOptionIndex]
																		
																														this.closeListbox()
																												},
																		
																												toggleListboxVisibility: function () {
																														if (this.open) return this.closeListbox()
																		
																														this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
																		
																														if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
																		
																														this.open = true
																		
																														this.$nextTick(() => {
																																this.$refs.search.focus()
																		
																																this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																																		block: "center"
																																})
																														})
																												},
																										}
																								}
																						</script>
																				</div>
																		</div>
																		<br>
																		<div class="col-span-6 sm:col-span-3">
																			<div>
																			<label id="listbox-label-pregnancy" class="text-sm">
																					Embarazo
																			</label>
																			<div class="max-w-xs mt-1">
																					<div
																					x-data="select({ data: { si: 'Si', no: 'No'}, emptyOptionsMessage: 'No se ha seleccionado ninguna opción.', name: 'Lactancia', placeholder: 'Elige una opción' })"
																									x-init="init()"
																									@click.away="closeListbox()"
																									@keydown.escape="closeListbox()"
																									class="relative"
																					>
																									<span class="inline-block w-full rounded-md shadow-sm">
																												<button type="button"
																																x-ref="button"
																																@click="toggleListboxVisibility()"
																																:aria-expanded="open"
																																aria-haspopup="listbox"
																																class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
																												>
																															<span
																																			x-show="! open"
																																			x-text="value in options ? options[value] : placeholder"
																																			:class="{ 'text-gray-500': ! (value in options) }"
																																			class="block truncate"
																															></span>
																	
																															<input
																																			x-ref="search"
																																			x-show="open"
																																			x-model="search"
																																			@keydown.enter.stop.prevent="selectOption()"
																																			@keydown.arrow-up.prevent="focusPreviousOption()"
																																			@keydown.arrow-down.prevent="focusNextOption()"
																																			type="search"
																																			class="w-full h-full form-control focus:outline-none"
																															/>
																	
																															<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
																																	<svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" stroke="currentColor">
																																			<path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5" stroke-linecap="round"
																																						stroke-linejoin="round"></path>
																																	</svg>
																															</span>
																												</button>
																									</span>
																	
																							<div
																											x-show="open"
																											x-transition:leave="transition ease-in duration-100"
																											x-transition:leave-start="opacity-100"
																											x-transition:leave-end="opacity-0"
																											x-cloak
																											class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
																							>
																									<ul
																													x-ref="listbox"
																													@keydown.enter.stop.prevent="selectOption()"
																													@keydown.arrow-up.prevent="focusPreviousOption()"
																													@keydown.arrow-down.prevent="focusNextOption()"
																													role="listbox"
																													:aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
																													tabindex="-1"
																													class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
																									>
																											<template x-for="(key, index) in Object.keys(options)" :key="index">
																													<li
																																	:id="name + 'Option' + focusedOptionIndex"
																																	@click="selectOption()"
																																	@mouseenter="focusedOptionIndex = index"
																																	@mouseleave="focusedOptionIndex = null"
																																	role="option"
																																	:aria-selected="focusedOptionIndex === index"
																																	:class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
																																	class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
																													>
																																	<span x-text="Object.values(options)[index]"
																																				:class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
																																				class="block font-normal truncate"
																																	></span>
																	
																															<span
																																			x-show="key === value"
																																			:class="{ 'text-white': index === focusedOptionIndex, 'text-indigo-600': index !== focusedOptionIndex }"
																																			class="absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600"
																															>
																																			<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
																																					<path fill-rule="evenodd"
																																								d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
																																								clip-rule="evenodd"/>
																																			</svg>
																																	</span>
																													</li>
																											</template>
																	
																											<div
																															x-show="! Object.keys(options).length"
																															x-text="emptyOptionsMessage"
																															class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
																									</ul>
																							</div>
																					</div>
																	
																					<script>
																							function select(config) {
																									return {
																											data: config.data,
																	
																											emptyOptionsMessage: config.emptyOptionsMessage ?? 'No results match your search.',
																	
																											focusedOptionIndex: null,
																	
																											name: config.name,
																	
																											open: false,
																	
																											options: {},
																	
																											placeholder: config.placeholder ?? 'Select an option',
																	
																											search: '',
																	
																											value: config.value,
																	
																											closeListbox: function () {
																													this.open = false
																	
																													this.focusedOptionIndex = null
																	
																													this.search = ''
																											},
																	
																											focusNextOption: function () {
																													if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1
																	
																													if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return
																	
																													this.focusedOptionIndex++
																	
																													this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																															block: "center",
																													})
																											},
																	
																											focusPreviousOption: function () {
																													if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
																	
																													if (this.focusedOptionIndex <= 0) return
																	
																													this.focusedOptionIndex--
																	
																													this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																															block: "center",
																													})
																											},
																	
																											init: function () {
																													this.options = this.data
																	
																													if (!(this.value in this.options)) this.value = null
																	
																													this.$watch('search', ((value) => {
																															if (!this.open || !value) return this.options = this.data
																	
																															this.options = Object.keys(this.data)
																																	.filter((key) => this.data[key].toLowerCase().includes(value.toLowerCase()))
																																	.reduce((options, key) => {
																																			options[key] = this.data[key]
																																			return options
																																	}, {})
																													}))
																											},
																	
																											selectOption: function () {
																													if (!this.open) return this.toggleListboxVisibility()
																	
																													this.value = Object.keys(this.options)[this.focusedOptionIndex]
																	
																													this.closeListbox()
																											},
																	
																											toggleListboxVisibility: function () {
																													if (this.open) return this.closeListbox()
																	
																													this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
																	
																													if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
																	
																													this.open = true
																	
																													this.$nextTick(() => {
																															this.$refs.search.focus()
																	
																															this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																																	block: "center"
																															})
																													})
																											},
																									}
																							}
																					</script>
																			</div>
																	</div>
																	<br>
																	<div class="col-span-6 sm:col-span-3">
																		<div>
																		<label id="listbox-label-breastfeeding" class="text-sm">
																				Lactancia
																		</label>
																		<div class="max-w-xs mt-1">
																				<div
																				x-data="select({ data: { si: 'Si', no: 'No'}, emptyOptionsMessage: 'No se ha seleccionado ninguna opción.', name: 'Lactancia', placeholder: 'Elige una opción' })"
																								x-init="init()"
																								@click.away="closeListbox()"
																								@keydown.escape="closeListbox()"
																								class="relative"
																				>
																								<span class="inline-block w-full rounded-md shadow-sm">
																											<button type="button"
																															x-ref="button"
																															@click="toggleListboxVisibility()"
																															:aria-expanded="open"
																															aria-haspopup="listbox"
																															class="relative z-0 w-full py-2 pl-3 pr-10 text-left transition duration-150 ease-in-out bg-white border border-gray-300 rounded-md cursor-default focus:outline-none focus:shadow-outline-blue focus:border-blue-300 sm:text-sm sm:leading-5"
																											>
																														<span
																																		x-show="! open"
																																		x-text="value in options ? options[value] : placeholder"
																																		:class="{ 'text-gray-500': ! (value in options) }"
																																		class="block truncate"
																														></span>
																
																														<input
																																		x-ref="search"
																																		x-show="open"
																																		x-model="search"
																																		@keydown.enter.stop.prevent="selectOption()"
																																		@keydown.arrow-up.prevent="focusPreviousOption()"
																																		@keydown.arrow-down.prevent="focusNextOption()"
																																		type="search"
																																		class="w-full h-full form-control focus:outline-none"
																														/>
																
																														<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
																																<svg class="w-5 h-5 text-gray-400" viewBox="0 0 20 20" fill="none" stroke="currentColor">
																																		<path d="M7 7l3-3 3 3m0 6l-3 3-3-3" stroke-width="1.5" stroke-linecap="round"
																																					stroke-linejoin="round"></path>
																																</svg>
																														</span>
																											</button>
																								</span>
																
																						<div
																										x-show="open"
																										x-transition:leave="transition ease-in duration-100"
																										x-transition:leave-start="opacity-100"
																										x-transition:leave-end="opacity-0"
																										x-cloak
																										class="absolute z-10 w-full mt-1 bg-white rounded-md shadow-lg"
																						>
																								<ul
																												x-ref="listbox"
																												@keydown.enter.stop.prevent="selectOption()"
																												@keydown.arrow-up.prevent="focusPreviousOption()"
																												@keydown.arrow-down.prevent="focusNextOption()"
																												role="listbox"
																												:aria-activedescendant="focusedOptionIndex ? name + 'Option' + focusedOptionIndex : null"
																												tabindex="-1"
																												class="py-1 overflow-auto text-base leading-6 rounded-md shadow-xs max-h-60 focus:outline-none sm:text-sm sm:leading-5"
																								>
																										<template x-for="(key, index) in Object.keys(options)" :key="index">
																												<li
																																:id="name + 'Option' + focusedOptionIndex"
																																@click="selectOption()"
																																@mouseenter="focusedOptionIndex = index"
																																@mouseleave="focusedOptionIndex = null"
																																role="option"
																																:aria-selected="focusedOptionIndex === index"
																																:class="{ 'text-white bg-indigo-600': index === focusedOptionIndex, 'text-gray-900': index !== focusedOptionIndex }"
																																class="relative py-2 pl-3 text-gray-900 cursor-default select-none pr-9"
																												>
																																<span x-text="Object.values(options)[index]"
																																			:class="{ 'font-semibold': index === focusedOptionIndex, 'font-normal': index !== focusedOptionIndex }"
																																			class="block font-normal truncate"
																																></span>
																
																														<span
																																		x-show="key === value"
																																		:class="{ 'text-white': index === focusedOptionIndex, 'text-indigo-600': index !== focusedOptionIndex }"
																																		class="absolute inset-y-0 right-0 flex items-center pr-4 text-indigo-600"
																														>
																																		<svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
																																				<path fill-rule="evenodd"
																																							d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
																																							clip-rule="evenodd"/>
																																		</svg>
																																</span>
																												</li>
																										</template>
																
																										<div
																														x-show="! Object.keys(options).length"
																														x-text="emptyOptionsMessage"
																														class="px-3 py-2 text-gray-900 cursor-default select-none"></div>
																								</ul>
																						</div>
																				</div>
																
																				<script>
																						function select(config) {
																								return {
																										data: config.data,
																
																										emptyOptionsMessage: config.emptyOptionsMessage ?? 'No results match your search.',
																
																										focusedOptionIndex: null,
																
																										name: config.name,
																
																										open: false,
																
																										options: {},
																
																										placeholder: config.placeholder ?? 'Select an option',
																
																										search: '',
																
																										value: config.value,
																
																										closeListbox: function () {
																												this.open = false
																
																												this.focusedOptionIndex = null
																
																												this.search = ''
																										},
																
																										focusNextOption: function () {
																												if (this.focusedOptionIndex === null) return this.focusedOptionIndex = Object.keys(this.options).length - 1
																
																												if (this.focusedOptionIndex + 1 >= Object.keys(this.options).length) return
																
																												this.focusedOptionIndex++
																
																												this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																														block: "center",
																												})
																										},
																
																										focusPreviousOption: function () {
																												if (this.focusedOptionIndex === null) return this.focusedOptionIndex = 0
																
																												if (this.focusedOptionIndex <= 0) return
																
																												this.focusedOptionIndex--
																
																												this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																														block: "center",
																												})
																										},
																
																										init: function () {
																												this.options = this.data
																
																												if (!(this.value in this.options)) this.value = null
																
																												this.$watch('search', ((value) => {
																														if (!this.open || !value) return this.options = this.data
																
																														this.options = Object.keys(this.data)
																																.filter((key) => this.data[key].toLowerCase().includes(value.toLowerCase()))
																																.reduce((options, key) => {
																																		options[key] = this.data[key]
																																		return options
																																}, {})
																												}))
																										},
																
																										selectOption: function () {
																												if (!this.open) return this.toggleListboxVisibility()
																
																												this.value = Object.keys(this.options)[this.focusedOptionIndex]
																
																												this.closeListbox()
																										},
																
																										toggleListboxVisibility: function () {
																												if (this.open) return this.closeListbox()
																
																												this.focusedOptionIndex = Object.keys(this.options).indexOf(this.value)
																
																												if (this.focusedOptionIndex < 0) this.focusedOptionIndex = 0
																
																												this.open = true
																
																												this.$nextTick(() => {
																														this.$refs.search.focus()
																
																														this.$refs.listbox.children[this.focusedOptionIndex].scrollIntoView({
																																block: "center"
																														})
																												})
																										},
																								}
																						}
																				</script>
																		</div>
																</div>
																		
																</div>
														</form>
												</div>
										</div>
								</div>
						</div> <!-- fin card información personal-->
					</div>
				</div>
				</div>
				<div class="bg-gray-100 w-full px-6 py-5">
					<div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
							<!-- This example requires Tailwind CSS v2.0+ -->
  
								<div class="md:col-span-3">
										<h3 class="text-lg font-medium leading-6 text-gray-900">Laboratorios</h3>
      					</div>
									<div class="border-t border-gray-200 px-0 sm:my-4 sm:mx-0"></div>
										<dl class="sm:divide-y sm:divide-gray-200">
											<div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
												<dt class="text-sm medium">
													Quìmica Sanguinea
												</dt>
												<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
													<button type="button" class="relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-1 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
														<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
															<path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
														</svg>
														<span class="mt-2 block text-sm font-medium text-gray-900">
															Agregar estudio
														</span>
													</button>
												</dd>
											</div>
											<div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
												<dt class="text-sm medium">
													Biometría hemática
												</dt>	
												
												<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
													<div class="flex justify-between">
                              <label for="allergies" class="block text-sm font-medium text-white">Agregar</label> 
                              <button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-full text-indigo-600 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        <!-- Heroicon name: outline/plus -->
                              <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-1 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                              </svg>
                               Agregar
                             </button>
                            </div>
													<ul role="list" class="border border-gray-200 rounded-md divide-y divide-gray-200">
													
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
														
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	resume_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400 hover:text-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400 hover:text-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	coverletter_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
													</ul>
												</dd>
											</div>
											<div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
												<dt class="text-sm medium">
													Examen general de orina
												</dt>
												<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
													<div class="flex justify-between">
                              <label for="allergies" class="block text-sm font-medium text-white">Agregar</label> 
                              <button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-full text-indigo-600 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        <!-- Heroicon name: outline/plus -->
                              <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-1 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                              </svg>
                               Agregar
                             </button>
                            </div>
													<ul role="list" class="border border-gray-200 rounded-md divide-y divide-gray-200">
													
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
														
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	resume_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	coverletter_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
													</ul>
												</dd>
											</div>
											<div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
												<dt class="text-sm medium">
													Perfil lipídico
												</dt>
												<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
													<div class="flex justify-between">
                              <label for="allergies" class="block text-sm font-medium text-white">Agregar</label> 
                              <button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-full text-indigo-600 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        <!-- Heroicon name: outline/plus -->
                              <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-1 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                              </svg>
                               Agregar
                             </button>
                            </div>
													<ul role="list" class="border border-gray-200 rounded-md divide-y divide-gray-200">
													
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
														
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	resume_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	coverletter_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
													</ul>
												</dd>
											</div>
											<div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
												<dt class="text-sm medium">
													Perfil tiroideo
												</dt>
												<dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
													<div class="flex justify-between">
                              <label for="allergies" class="block text-sm font-medium text-white">Agregar</label> 
                              <button type="button" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-full text-indigo-600 bg-white hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        <!-- Heroicon name: outline/plus -->
                              <svg xmlns="http://www.w3.org/2000/svg" class="-ml-0.5 mr-1 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                              </svg>
                               Agregar
                             </button>
                            </div>
													<ul role="list" class="border border-gray-200 rounded-md divide-y divide-gray-200">
													
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
														
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	resume_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
														<li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm">
															<div class="w-0 flex-1 flex items-center">
																<!-- Heroicon name: solid/paper-clip -->
																<svg class="flex-shrink-0 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
																	<path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd" />
																</svg>
																<span class="ml-2 flex-1 w-0 truncate">
																	coverletter_back_end_developer.pdf
																</span>
															</div>
															<div class="ml-4 flex-shrink-0">
															<span class="ml-4 flex-shrink-0 flex items-start space-x-4">
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
																	</svg>
																</button>
																<span class="text-gray-300" aria-hidden="true">|</span>
																<button type="button" class="bg-white rounded-md font-medium text-gray-400  hover:text-gray-400  focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 ">
																	<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
																		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
																	</svg>
																</button>
															</span>
															</div>
														</li>
													</ul>
												</dd>
											</div>
										</dl>
									</div>
							</div>
					</div> <!-- fin card información personal-->

				